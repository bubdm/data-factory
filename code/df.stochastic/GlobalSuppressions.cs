// --------------------------------------------------------------------------------
// <copyright file="GlobalSuppressions.cs" company="Michalis Sarigiannidis">
// Copyright 2019 © Michalis Sarigiannidis. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the solution root for full license information.
// </copyright>
// --------------------------------------------------------------------------------

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeChar(System.Char)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1202:Elements should be ordered by access", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeCharSet(System.String)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeInterval(System.Int32,System.Int32,System.Int32)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2208:Instantiate argument exceptions correctly", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeInterval(System.Int32,System.Int32,System.Int32)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1202:Elements should be ordered by access", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeMinInteger(System.String)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeStringMatcher(System.String)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1202:Elements should be ordered by access", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicAutomata.MakeTotalDigits(System.Int32)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicOperations.Run(Df.Stochastic.Fare.Automaton,System.String)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ParseRepeatExp~Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ParseSimpleExp~Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ParseSimpleExp~Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.Peek(System.String)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "CA1822:Mark members as static", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.SetAllowMutate(System.Boolean)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToStringBuilder(System.Text.StringBuilder)~System.Text.StringBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1405:Debug.Assert should provide message text", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.StringUnionOperations.Add(System.Char[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1405:Debug.Assert should provide message text", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.StringUnionOperations.State.GetLastChild(System.Char)~Df.Stochastic.Fare.StringUnionOperations.State")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.Xeger.RemoveStartEndMarkers(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton(Df.Stochastic.Fare.IAutomatonProvider)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton(Df.Stochastic.Fare.IAutomatonProvider,System.Boolean)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton(System.Boolean)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton(System.Collections.Generic.IDictionary{System.String,Df.Stochastic.Fare.Automaton})~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.ToAutomaton(System.Collections.Generic.IDictionary{System.String,Df.Stochastic.Fare.Automaton},System.Boolean)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.Automaton.CloneExpandedIfRequired~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.Automaton.CloneIfRequired~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicOperations.Repeat(Df.Stochastic.Fare.Automaton,System.Int32)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.BasicOperations.Repeat(Df.Stochastic.Fare.Automaton,System.Int32,System.Int32)~Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "CA1814:Prefer jagged arrays over multidimensional", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.MinimizationOperations.MinimizeHopcroft(Df.Stochastic.Fare.Automaton)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.Transition.AppendCharString(System.Char,System.Text.StringBuilder)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "not my code.", Scope = "namespace", Target = "~N:Df.Stochastic.Fare")]