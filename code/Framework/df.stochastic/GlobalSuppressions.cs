// --------------------------------------------------------------------------------
// <copyright file="GlobalSuppressions.cs" company="Michalis Sarigiannidis">
// Copyright 2019 © Michalis Sarigiannidis. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the solution root for full license information.
// </copyright>
// --------------------------------------------------------------------------------

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1135:Declare enum member with zero value (when enum has FlagsAttribute).", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExpSyntaxOptions")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RCS1157:Composite enum value contains undefined flag.", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExpSyntaxOptions")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicAutomata")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.Transition")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicAutomata")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicOperations")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1307:Specify StringComparison", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.Xeger")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "CA1814:Prefer jagged arrays over multidimensional", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.MinimizationOperations")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "CA1822:Mark members as static", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.Automaton")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicOperations")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.RegExp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "This is forked code.", Scope = "namespace", Target = "~N:Df.Stochastic.Fare")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1405:Debug.Assert should provide message text", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.StringUnionOperations")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1202:Elements should be ordered by access", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicAutomata")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2208:Instantiate argument exceptions correctly", Justification = "This is forked code.", Scope = "type", Target = "~T:Df.Stochastic.Fare.BasicAutomata")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0047:Remove unnecessary parentheses", Justification = "This is forked code.", Scope = "namespace", Target = "~N:Df.Stochastic.Fare")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.Xeger.Generate(System.Text.StringBuilder,Df.Stochastic.Fare.State)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.StringUnionOperations.Complete~Df.Stochastic.Fare.StringUnionOperations.State")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.State.CompareTo(System.Object)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "This is forked code.", Scope = "member", Target = "~M:Df.Stochastic.Fare.RegExp.Next~System.Char")]